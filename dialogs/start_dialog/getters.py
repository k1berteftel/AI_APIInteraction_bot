import datetime
import os

from aiogram import Bot
from aiogram.types import User, Message, ContentType
from aiogram_dialog import ShowMode, DialogManager
from aiogram_dialog.api.entities import MediaId, MediaAttachment
from aiogram_dialog.widgets.input import MessageInput

from config_data.config import load_config, Config
from database.db_conf import database
from states.start_group import startSG
from utils.date_func import get_succes
from utils.generate_proccess import generate_process, add_watermark

config: Config = load_config()
db = database('users')


async def get_image(event_from_user: User, **kwargs):
    refferals: int = db.get_referrals(event_from_user.id)
    if refferals >= 2:
        db.update_generates(user_id=event_from_user.id, generates=3)
        db.add_referrals(event_from_user.id, -2)

    try:
        os.remove(f'{event_from_user.id}.png')
    except Exception as err:
        print(err)

    img_id = 'AgACAgIAAxkBAAIBqWZRrEc_J44bQuI55Vrknx5AUt3fAAJ33TEb_yqJSisYFsX9wwL6AQADAgADcwADNQQ'
    image = MediaAttachment(ContentType.PHOTO, file_id=MediaId(img_id))
    return {'photo': image}


async def get_generations(event_from_user: User, **kwargs):
    generates: int = db.get_generates(event_from_user.id)
    free_generations: int | bool = get_succes(user_id=event_from_user.id, db=db)
    if generates:
        text = f'<b>–¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω–æ {generates} –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤</b>\n\n' \
               f'–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É <b>¬´–ö—É–ø–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏¬ª</b> –∏–ª–∏ –ø–æ–ª—É—á–∏ üéÅ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ.'
        return {'generations': text}
    elif free_generations:
        text = '<b>–¢–∞–∫, —è –≤–∏–∂—É, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å 1 –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è üòå</b>\n\n' \
               '–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –∑–∞ —Å—É—Ç–∫–∏ —Å–¥–µ–ª–∞—Ç—å –≤—Å–µ–≥–æ 1 —Ñ–æ—Ç–æ —Å –∑–∞–º–µ–Ω–æ–π –ª–∏—Ü–∞ –∏ –≤–æ–¥—è–Ω—ã–º –∑–Ω–∞–∫–æ–º.\n\n' \
               '–ß—Ç–æ–±—ã —Å–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏ –¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É <b>¬´–ö—É–ø–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏¬ª</b> –∏–ª–∏ –ø–æ–ª—É—á–∏ üéÅ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ.'
        return {'generations': text}
    else:
        text = '<b>–ê –≤—Å–µ, –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –Ω–µ—Ç. –û–¥–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç —Ç–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤, –Ω–æ —Å –≤–æ–¥—è–Ω—ã–º –∑–Ω–∞–∫–æ–º.</b>\n\n' \
               '–ß—Ç–æ–±—ã —Å–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏ –¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É <b>¬´–ö—É–ø–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏¬ª</b> –∏–ª–∏ –ø–æ–ª—É—á–∏ üéÅ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ.'
        return {'generations': text}


async def input_getter1(event_from_user: User, **kwargs):
    img_id = 'AgACAgIAAxkBAAIBvGZRt0MsdcI3vr1H4yLtOnoTtGG6AAI81zEb7sSQSgxq-zz1tt9pAQADAgADcwADNQQ'
    image = MediaAttachment(ContentType.PHOTO, file_id=MediaId(img_id))
    if db.get_generates(event_from_user.id) or get_succes(event_from_user.id, db=db):
        text = '–ò—É—É—É—É—É! –ü–æ–µ—Ö–∞–ª–∏!\n\n1Ô∏è‚É£ –î–ª—è –Ω–∞—á–∞–ª–∞, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏—Ü–æ.\n\n' \
               '<em>* —Ñ–æ—Ç–æ –Ω–∏–≥–¥–µ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏ –µ–≥–æ –Ω–∏–∫—Ç–æ –Ω–µ —É–≤–∏–¥–∏—Ç, –º—ã –æ–±–µ—â–∞–µ–º</em> \n\n<b>üî• –í–∞–∂–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n\n' \
               '<em>‚Äî –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ö–æ—Ä–æ—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–æ</em>\n\n' \
               '<em>‚Äî –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞ —Ñ–æ—Ç–æ —Ö–æ—Ä–æ—à–æ –±—ã–ª–æ –≤–∏–¥–Ω–æ —Å–∞–º–æ –ª–∏—Ü–æ. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤, —Ä—É–∫, –∑–∞—Å–≤–µ—Ç–æ–≤</em>\n\n' \
               '<em>‚Äî –û—Ç–ø—Ä–∞–≤–ª—è–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π, –∞ –Ω–µ —Ñ–∞–π–ª–æ–º </em>\n\n<b>–ñ–¥—É —Ñ–æ—Ç–æ üëá</b>'
        return {'text': text,
                'photo': image,
                'is_generations': True}
    text = '<b>–ê –≤—Å–µ, –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –Ω–µ—Ç. –û–¥–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç —Ç–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤, –Ω–æ —Å –≤–æ–¥—è–Ω—ã–º –∑–Ω–∞–∫–æ–º.</b>\n\n' \
           '–ß—Ç–æ–±—ã —Å–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏ –¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É <b>¬´–ö—É–ø–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏¬ª</b> –∏–ª–∏ –ø–æ–ª—É—á–∏ üéÅ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ.'
    return {'text': text,
            'photo': image,
            'is_generations': False}


async def ref_getter(event_from_user: User, **kwargs):
    return {'link': db.get_deeplink(user_id=event_from_user.id)}


async def first_success_get(message: Message, widget: MessageInput, dialog_manager: DialogManager, *args,
                            **kwargs) -> None:
    if not get_succes(message.from_user.id, db=db) and not db.get_generates(message.from_user.id):
        await message.answer('–£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏')
        return

    referral: int = db.get_referral(message.from_user.id)
    if referral:
        db.add_referrals(referral, refferals=1)
        db.add_referral(user_id=message.from_user.id, referral=0)

    if db.get_generates(message.from_user.id):
        db.update_generates(message.from_user.id, -1)
        dialog_manager.dialog_data['watermark'] = 0
    else:
        db.update_data(data=str(datetime.date.today()), user_id=message.from_user.id)
        dialog_manager.dialog_data['watermark'] = 1

    dialog_manager.show_mode = ShowMode.NO_UPDATE  # –í–æ—Ç —ç—Ç—É —Å—Ç—Ä–æ–∫—É –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
    bot: Bot = dialog_manager.middleware_data.get('bot')
    file = await bot.get_file(message.photo[-1].file_id)
    await bot.download_file(file.file_path, f'first_{message.from_user.id}.jpg')
    dialog_manager.dialog_data['target_image'] = f'first_{message.from_user.id}.jpg'

    text = '–•–æ—Ä–æ—à–æ. –¢–µ–ø–µ—Ä—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥!\n\n2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ª–∏—Ü–∞, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–ª–æ–∂–∏—Ç—å.\n\n' \
           '<em>* —Ñ–æ—Ç–æ –Ω–∏–≥–¥–µ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏ –µ–≥–æ –Ω–∏–∫—Ç–æ –Ω–µ —É–≤–∏–¥–∏—Ç, –º—ã –æ–±–µ—â–∞–µ–º</em>\n\n<b>üî• –í–∞–∂–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n\n' \
           '<em>‚Äî –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ö–æ—Ä–æ—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞</em>\n\n' \
           '<em>‚Äî –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞ —Ñ–æ—Ç–æ —Ö–æ—Ä–æ—à–æ –±—ã–ª–æ –≤–∏–¥–Ω–æ —Å–∞–º–æ –ª–∏—Ü–æ. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤, —Ä—É–∫, –∑–∞—Å–≤–µ—Ç–æ–≤ </em>\n\n' \
           '<em>‚Äî –û—Ç–ø—Ä–∞–≤–ª—è–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π, –∞ –Ω–µ —Ñ–∞–π–ª–æ–º </em>\n\n<em>‚Äî –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ —Ñ–æ—Ç–æ –ª–∏—Ü–∞ –¥–µ–ª–∞—Ç—å —Å –ø—Ä—è–º–æ–≥–æ —Ä–∞–∫—É—Ä—Å–∞ </em>\n\n<b>–ñ–¥—É –ª–∏—Ü–æ üëá</b>'
    await message.answer_photo(
        photo='AgACAgIAAxkBAAIBvmZRt0WP7Xg9-Tjn-4SDLGjcbyAOAAI91zEb7sSQSsnYdQYhl6IyAQADAgADcwADNQQ', caption=text)
    await dialog_manager.next()


async def second_success_get(message: Message, widget: MessageInput, dialog_manager: DialogManager):
    dialog_manager.show_mode = ShowMode.AUTO
    bot: Bot = dialog_manager.middleware_data.get('bot')

    file = await bot.get_file(message.photo[-1].file_id)
    await bot.download_file(file.file_path, f'second_{message.from_user.id}.jpg')

    dialog_manager.dialog_data['swap_image'] = f'second_{message.from_user.id}.jpg'
    # dialog_manager.dialog_data['user_id'] = message.from_user.id
    await dialog_manager.switch_to(state=startSG.success_generate)


async def generate_getter(dialog_manager: DialogManager, **kwargs):
    event_from_user: User = dialog_manager.middleware_data.get('event_from_user')
    bot: Bot = dialog_manager.middleware_data.get('bot')
    info = dict(dialog_manager.dialog_data.items())
    print(info)

    await bot.send_message(chat_id=event_from_user.id,
                           text='–í—Å–µ! –¢–µ–ø–µ—Ä—å –¥–∞–π –º–∏–Ω—É—Ç–∫—É –Ω–∞—à–µ–º—É –ø–ª–∞—Å—Ç–∏—á–µ—Å–∫–æ–º—É —Ö–∏—Ä—É—Ä–≥—É, —á—Ç–æ–±—ã –æ–Ω –∑–∞–º–µ–Ω–∏–ª –ª–∏—Ü–æ ‚ù§Ô∏è')

    target_img_path = dialog_manager.dialog_data.get("target_image")
    swap_img_path = dialog_manager.dialog_data.get("swap_image")

    target_image = open(target_img_path, 'rb')
    swap_image = open(swap_img_path, 'rb')
    image_url = await generate_process(target_image, swap_image)

    target_image.close()
    swap_image.close()

    try:
        os.remove(target_img_path)
        os.remove(swap_img_path)
    except Exception as err:
        print(err)

    if not image_url:
        if dialog_manager.dialog_data.get("watermark"):
            db.update_data(None, user_id=event_from_user.id)
        else:
            db.update_generates(event_from_user.id, 1)
        text = 'üò¢ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ–π—Ä–æ—Å–µ—Ç—å –Ω–µ —Å–º–æ–≥–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –ª–∏—Ü–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ —Ñ–æ—Ç–æ'
        return {'text': text,
                'is_image': False}

    if dialog_manager.dialog_data.get("watermark"):
        img_path = add_watermark(image_url, event_from_user.id)
        text = '<b>–¢–≤–æ—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ ü•≥</b>\n\n–ù–æ –æ–Ω–∞ —Å –≤–æ–¥—è–Ω—ã–º –∑–Ω–∞–∫–æ–º(((\n\n' \
               '–ß—Ç–æ–±—ã —Å–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏ –¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É <b>¬´–ö—É–ø–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏¬ª</b> –∏–ª–∏ –ø–æ–ª—É—á–∏ üéÅ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ.'
        image = MediaAttachment(ContentType.PHOTO, path=img_path)
        return {'text': text,
                'image': image,
                'is_image': True}
    else:
        image = MediaAttachment(ContentType.PHOTO, url=image_url)
        text = f'<b>–¢–≤–æ—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ ü•≥</b>\n\n–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å: {db.get_generates(event_from_user.id) if db.get_generates(event_from_user.id) else 1} –≥–µ–Ω–µ—Ä–∞—Ü–∏–π\n\n' \
               f'–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ¬´–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å¬ª –∏ –¥–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –µ—â–µ.\n\n' \
               f'–°–∞–º—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –º—ã –º–æ–∂–µ–º –≤—ã–ª–æ–∂–∏—Ç—å –Ω–∞ –∫–∞–Ω–∞–ª <a href="https://t.me/choslic">¬´–ß–µ —Å –ª–∏—Ü–æ–º?¬ª</a> –∏ –ø–æ–¥–∞—Ä–∏—Ç—å –∑–∞ —ç—Ç–æ –¥–æ–ø. –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.'
        return {'text': text,
                'image': image,
                'is_image': True}
